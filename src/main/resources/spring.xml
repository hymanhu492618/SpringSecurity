<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- 配置自动扫描的包。为ssm包下的所有类创建对象。 -->
    <context:component-scan base-package="com.atguigu.maven">
        <!-- 配置Spring不扫描controller包。 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 引入外部属性文件，配置JDBC信息。 -->
    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>

    <!-- 配置连接数据库的数据源。 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="initialSize" value="${jdbc.initialSize}"></property>
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <property name="maxWait" value="${jdbc.maxWait}"></property>
    </bean>

    <!-- spring整合Mybatis。 -->
    <!-- 第一步：配置SqlSessionFactoryBean。 -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置数据源。引用上面配置的德鲁伊的连接池。 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置MyBatis的全局配置文件的路径。 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 配置Mapper接口的sql映射文件。 -->
        <property name="mapperLocations" value="classpath:EmployeeMapper.xml"></property>
        <!-- MyBatis的全局配置文件中配置的内容，如起别名、插件等，都可以在此配置。 -->
    </bean>

    <!-- 第二步：扫描Mapper接口。  -->
    <!-- mybatis的Mapper接口扫描，第一种写法。 -->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>-->
        <!-- mapper接口扫描包。-->
<!--        <property name="basePackage" value="com.atguigu.maven.mapper"/>-->
<!--    </bean>-->

    <!-- 自动扫描Mapper包的第二种写法。 -->
    <mybatis-spring:scan base-package="com.atguigu.maven.mapper"></mybatis-spring:scan>
</beans>