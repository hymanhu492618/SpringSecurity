<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="4.0"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 					http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring.xml</param-value>
  </context-param>

  <!-- DelegatingFilterProxy用于整合第三方框架(代理过滤器，非真正的过滤器，真正的过滤器需要在spring的配置文件)。
  整合Spring Security时过滤器的名称必频为springSecurityFilterChain，否则会抛出NoSuchBeanDefinitionException异常。  -->

  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 配置前端控制器DispatcherServlet。-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--  配置初始化的参数。是局部的参数配置，参数只属于dispatcherServlet。  -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <!-- 配置springMVC的配置文件的路径和名称。 -->
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <!-- 让前端控制器servlet在项目启动加载阶段就进行实例。  -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <!-- 以下标签中的地址，一定要配置成/斜杠。这里是解析所有的除了jsp页面以外的请求。  -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
